/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>


/ {
	model = "icebreaker, rev_1"; 
	compatible = "icebreaker,rev_1";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,battery = &fuelgauge;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
		zmk,underlow = &led_strip;
		/* zephyr,console = &cdc_acm_uart; */
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <15>;
		rows = <5>;
		map = <
			RC(0,0)	RC(0,1)	RC(0,2)	RC(0,3)	RC(0,4)	RC(0,5)	RC(0,6)	RC(0,7)	RC(0,8)	RC(0,9)	RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15)
			RC(1,0)	RC(1,1)	RC(1,2)	RC(1,3)	RC(1,4)	RC(1,5)	RC(1,6)	RC(1,7)	RC(1,8)	RC(1,9)	RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14)
			RC(2,0)	RC(2,1)	RC(2,2)	RC(2,3)	RC(2,4)	RC(2,5)	RC(2,6)	RC(2,7)	RC(2,8)	RC(2,9)	RC(2,10) RC(2,11) RC(2,12)          RC(2,14)
			RC(3,0)	    	RC(3,2)	RC(3,3)	RC(3,4)	RC(3,5)	RC(3,6)	RC(3,7)	RC(3,8)	RC(3,9)	RC(3,10) RC(3,11) RC(0,12) RC(0,13) RC(0,14)
			RC(4,0)	RC(4,1)	RC(4,2)	                    	RC(4,6)	                    	RC(3,10) RC(3,11) RC(0,12) RC(0,13) RC(0,14)
			>;
	};

 
	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";
		row-gpios
			= <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1  13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0  30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>

			;
		col-gpios
			= <&gpio0 26 GPIO_ACTIVE_HIGH>
			, <&gpio0  6 GPIO_ACTIVE_HIGH>
			, <&gpio0  8 GPIO_ACTIVE_HIGH>
			, <&gpio0  4 GPIO_ACTIVE_HIGH>
			, <&gpio0  7 GPIO_ACTIVE_HIGH>
			, <&gpio0 10 GPIO_ACTIVE_HIGH>
			, <&gpio0  9 GPIO_ACTIVE_HIGH>
			, <&gpio1  6 GPIO_ACTIVE_HIGH>
			, <&gpio1  4 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
			, <&gpio0 20 GPIO_ACTIVE_HIGH>
			, <&gpio0 17 GPIO_ACTIVE_HIGH>
			, <&gpio0 15 GPIO_ACTIVE_HIGH>
			, <&gpio0 13 GPIO_ACTIVE_HIGH>
			, <&gpio0 25 GPIO_ACTIVE_HIGH>
			
            ;
	};
	encoder: encoder {
    	compatible = "alps,ec11";
        a-gpios = <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
		};
		
	sensors: sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder>;
		triggers-per-rotation = <20>;
    };
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

zephyr_udc0: &usbd {
    status = "okay";
};

&pinctrl {
       i2c0_default: i2c0_default {
               group1 {
                       psels = <NRF_PSEL(TWIM_SDA, 0, 5)>,
                               <NRF_PSEL(TWIM_SCL, 1, 9)>;
               };
       };

       i2c0_sleep: i2c0_sleep {
               group1 {
                       psels = <NRF_PSEL(TWIM_SDA, 0, 5)>,
                               <NRF_PSEL(TWIM_SCL, 1, 9)>;
                       low-power-enable;
               };
       };
};

&i2c0 {
	status = "okay";
	compatible = "nordic,nrf-twim";
	pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
	clock-frequency = <100000>;

	fuelgauge: max17048@36 {
		compatible = "zmk,maxim-max17048";
		reg = <0x36>;
	};
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};


#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 28)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 28)>;
            low-power-enable;
        };
    };
};

&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <10>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};